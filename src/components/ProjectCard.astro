---
interface Props {
    title: string;
    description: string;
    image?: string;
    technologies: string[];
    projectUrl: string;
    imageAlt?: string;
    btnName?: string;
    progress?: number;
}

const { title, description, image = "images/coming-soon.png", technologies, projectUrl, imageAlt = title, btnName, progress = 100} = Astro.props;
---

<div class="project-card">
    <div class="project-image">
        <img src={image} alt={imageAlt} />
        <div class="image-overlay"></div>
    </div>
    
    <div class="project-content">
        <h3 class="project-title">{title}</h3>
        <p class="project-description">{description}</p>
        
        <div class="project-technologies">
            {technologies.map((tech) => (
                <span class="tech-tag">{tech}</span>
            ))}
        </div>
        
        {btnName ? (
            <a href={projectUrl} class="project-link" target="_blank" rel="noopener noreferrer">
            {btnName}
            <svg viewBox="0 0 24 24" fill="currentColor">
                <path d="M14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3m-2 16H5V5h7V3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7h-2v7z"/>
            </svg>
        </a>
        ) : null}
        
        <div class="progress-section">
            <div class="progress-header">
                <span class="progress-label">Progress</span>
                <span class="progress-value">{progress}%</span>
            </div>
            <div class="progress-bar">
                <div class="progress-fill" style={`width: ${progress}%`}></div>
            </div>
        </div>
    </div>
</div>

<style>
    .project-card {
        background: var(--background-glass);
        backdrop-filter: blur(10px);
        border: 1px solid var(--border-glass);
        border-radius: 16px;
        overflow: hidden;
        transition: all 0.3s ease;
        height: 100%;
        display: flex;
        flex-direction: column;
    }

    .project-card:hover {
        transform: translateY(-8px);
        box-shadow: 0 20px 40px rgba(192, 132, 252, 0.2);
        border-color: var(--primary-purple);
    }

    .project-image {
        position: relative;
        height: 200px;
        overflow: hidden;
    }

    .project-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .project-card:hover .project-image img {
        transform: scale(1.05);
    }

    .image-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(135deg, rgba(45, 27, 105, 0.3), rgba(192, 132, 252, 0.2));
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .project-card:hover .image-overlay {
        opacity: 1;
    }

    .project-content {
        padding: 1.5rem;
        flex: 1;
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
    }

    .project-title {
        font-size: 1.4rem;
        font-weight: 600;
        color: var(--text-light);
        margin-bottom: 0.8rem;
        background: linear-gradient(135deg, var(--text-light) 0%, var(--primary-purple) 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .project-description {
        color: var(--text-muted);
        line-height: 1.6;
        margin-bottom: 1rem;
        flex: 1;
    }

    .project-technologies {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-bottom: 1.5rem;
        justify-content: center;
    }

    .tech-tag {
        background: rgba(192, 132, 252, 0.2);
        color: var(--primary-purple);
        padding: 0.3rem 0.8rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 500;
        border: 1px solid rgba(192, 132, 252, 0.3);
    }

    .project-link {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.8rem 1.5rem;
        background: linear-gradient(135deg, var(--primary-purple), var(--primary-purple-dark));
        color: white;
        text-decoration: none;
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.3s ease;
        margin-bottom: 1.5rem;
    }

    .project-link:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(192, 132, 252, 0.4);
    }

    .project-link svg {
        width: 16px;
        height: 16px;
    }

    .progress-section {
        width: 100%;
        max-width: 280px;
    }

    .progress-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 0.5rem;
    }

    .progress-label {
        font-size: 0.9rem;
        color: var(--text-medium);
        font-weight: 500;
    }

    .progress-value {
        font-size: 0.9rem;
        color: var(--primary-purple);
        font-weight: 600;
    }

    .progress-bar {
        width: 100%;
        height: 6px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 3px;
        overflow: hidden;
        position: relative;
    }

    .progress-fill {
        height: 100%;
        background: linear-gradient(90deg, var(--primary-purple), var(--primary-purple-dark));
        border-radius: 3px;
        transition: width 0.8s ease;
        position: relative;
    }

    .progress-fill::after {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        width: 20px;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3));
        animation: shimmer 2s infinite;
    }

    @keyframes shimmer {
        0% { transform: translateX(-30px); }
        100% { transform: translateX(0px); }
    }
</style>