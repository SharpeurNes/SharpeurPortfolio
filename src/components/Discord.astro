---
// Pas d'appel API cÃ´tÃ© serveur dans ce cas
---

<div class="discord-status" id="discord-widget" style="display: none;">
  <!-- Le contenu sera injectÃ© dynamiquement -->
</div>

<script client:load>
  // Fonctions utilitaires
  function getStatusColor(status) {
    switch (status) {
      case 'online': return '#23a55a';
      case 'idle': return '#f0b232';
      case 'dnd': return '#f23f42';
      case 'offline': 
      default: return '#80848e';
    }
  }

  function getStatusText(status) {
    switch (status) {
      case 'online': return 'Online';
      case 'idle': return 'Away';
      case 'dnd': return 'Do not disturb';
      case 'offline': 
      default: return 'Offline';
    }
  }

  function formatElapsedTime(startTimestamp) {
    const now = Date.now();
    const elapsed = now - startTimestamp;
    const minutes = Math.floor(elapsed / 60000);
    const hours = Math.floor(minutes / 60);
    
    if (hours > 0) {
      return `${hours}h ${minutes % 60}m`;
    }
    return `${minutes}m`;
  }

  function updateWidget(userData) {
    const widget = document.getElementById('discord-widget');
    if (!widget) return;
    
    // Filtrer les activitÃ©s
    const customStatus = userData.activities?.find(activity => activity.type === 4);
    const regularActivities = userData.activities?.filter(activity => activity.type !== 4) || [];

    widget.innerHTML = `
      <div class="header">
        <h2 class="title">Discord</h2>
      </div>
      
      <div class="main-info">
        <div class="left-section">
          <div class="avatar-container">
            <img 
              src="https://cdn.discordapp.com/avatars/${userData.discord_user.id}/${userData.discord_user.avatar}.png?size=128"
              alt="Avatar of ${userData.discord_user.display_name}"
              class="avatar"
            />
            <div 
              class="status-indicator"
              style="background-color: ${getStatusColor(userData.discord_status)}"
            ></div>
          </div>
          
          <div class="user-details">
            <p class="username">@SharpeurNes</p>
            <p class="status">${getStatusText(userData.discord_status)}</p>
          </div>
        </div>

        ${regularActivities.length > 0 ? `
          <div class="activity">
            <div class="activity-header">
              <span class="activity-label">Activity</span>
            </div>
            <div class="activity-list ${regularActivities.length > 1 ? 'multiple' : ''}">
              ${regularActivities.map(activity => `
                <div class="activity-item">
                  <div class="activity-info">
                    <p class="activity-name">${activity.name}</p>
                    ${activity.timestamps && activity.timestamps.start ? `
                      <p class="activity-time">for ${formatElapsedTime(activity.timestamps.start)}</p>
                    ` : ''}
                  </div>
                </div>
              `).join('')}
            </div>
          </div>
        ` : ''}
      </div>

      ${customStatus && customStatus.state ? `
        <div class="custom-status">
          <div class="custom-status-header">
            <span class="custom-status-label">Status</span>
          </div>
          <div class="custom-status-content">
            <span class="custom-status-text">${customStatus.state}</span>
          </div>
        </div>
      ` : ''}

      ${userData.listening_to_spotify && userData.spotify ? `
        <div class="spotify">
          <div class="spotify-header">
            <span class="spotify-label">ðŸŽµ Listening to Spotify</span>
          </div>
          <div class="spotify-info">
            <img 
              src="${userData.spotify.album_art_url}"
              alt="Album cover of ${userData.spotify.album}"
              class="spotify-album"
            />
            <div class="spotify-text">
              <p class="spotify-song">${userData.spotify.song}</p>
              <p class="spotify-artist">${userData.spotify.artist}</p>
            </div>
          </div>
        </div>
      ` : ''}
    `;
  }

  // Charger les donnÃ©es Discord
  async function loadDiscordData() {
    try {
      const response = await fetch(`https://api.lanyard.rest/v1/users/865640339083624479?t=${Date.now()}`);
      const data = await response.json();
      
      if (data.success) {
        updateWidget(data.data);
        // Afficher le widget avec une animation
        const widget = document.getElementById('discord-widget');
        if (widget) {
          widget.style.display = 'block';
          widget.style.opacity = '0';
          widget.style.transform = 'translateY(20px)';
          
          // Animation d'apparition
          setTimeout(() => {
            widget.style.transition = 'all 0.5s ease-out';
            widget.style.opacity = '1';
            widget.style.transform = 'translateY(0)';
          }, 10);
        }
      } else {
        const widget = document.getElementById('discord-widget');
        if (widget) {
          widget.innerHTML = `
            <div class="header">
              <h2 class="title">Discord</h2>
            </div>
            <div class="error">
              <p>Unable to fetch Discord data</p>
            </div>
          `;
          widget.style.display = 'block';
        }
      }
    } catch (error) {
      console.error('Discord API error:', error);
      const widget = document.getElementById('discord-widget');
      if (widget) {
        widget.innerHTML = `
          <div class="header">
            <h2 class="title">Discord</h2>
          </div>
          <div class="error">
            <p>Error connecting to Lanyard API</p>
          </div>
        `;
        widget.style.display = 'block';
      }
    }
  }

  // Attendre que le DOM soit prÃªt
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', loadDiscordData);
  } else {
    loadDiscordData();
  }
</script>

<style is:global>
  .discord-status {
    margin-top: 30px;
    background: linear-gradient(135deg, #2c1a66 0%, #3b2175 100%);
    border-radius: 16px;
    padding: 16px;
    color: #f0f0f0;
    text-shadow: rgba(192, 132, 252, 0.737) 0px 0px 27.8717px;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    max-width: 350px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.05);
  }

  .discord-status .header {
    margin-bottom: 12px;
  }

  .discord-status .title {
    margin: 0;
    font-size: 15px;
    font-weight: 600;
    opacity: 0.9;
    text-align: center;
  }

  .discord-status .main-info {
    display: flex;
    gap: 15px;
    margin-bottom: 10px;
  }

  .discord-status .left-section {
    display: flex;
    align-items: center;
    gap: 15px;
    flex: 1;
  }

  .discord-status .avatar-container {
    position: relative;
  }

  .discord-status .avatar {
    width: 60px;
    height: 60px;
    border-radius: 50%;
    border: 3px solid rgba(255, 255, 255, 0.2);
  }

  .discord-status .status-indicator {
    position: absolute;
    bottom: 1px;
    right: 1px;
    width: 15px;
    height: 15px;
    border-radius: 50%;
    border: 2px solid #2c2f33;
  }

  .discord-status .user-details {
    flex: 1;
    min-width: 0;
  }

  .discord-status .username {
    margin: 0 0 3px 0;
    font-size: 13px;
    opacity: 0.8;
    line-height: 1.1;
    font-weight: 500;
  }

  .discord-status .status {
    margin: 0;
    font-size: 11px;
    opacity: 0.9;
    background: rgba(255, 255, 255, 0.08);
    padding: 2px 5px;
    border-radius: 5px;
    display: inline-block;
    line-height: 1.1;
  }

  .discord-status .activity {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 8px;
    padding: 8px;
    min-width: 120px;
  }

  .discord-status .activity-header {
    margin-bottom: 5px;
  }

  .discord-status .activity-label {
    font-size: 11px;
    font-weight: 600;
    text-transform: uppercase;
    opacity: 0.6;
    letter-spacing: 0.3px;
  }

  .discord-status .activity-list {
    display: flex;
    flex-direction: column;
    gap: 4px;
  }

  .discord-status .activity-list.multiple {
    flex-direction: row;
    gap: 6px;
  }

  .discord-status .activity-list.multiple .activity-item {
    flex: 1;
    min-width: 0;
  }

  .discord-status .activity-info {
    display: flex;
    flex-direction: column;
    gap: 1px;
  }

  .discord-status .activity-name {
    margin: 0;
    font-size: 11px;
    font-weight: 500;
  }

  .discord-status .activity-time {
    margin: 0;
    font-size: 9px;
    opacity: 0.5;
  }

  .discord-status .custom-status {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 8px;
    padding: 8px 12px;
    margin-top: 8px;
    margin-bottom: 2px;
  }

  .discord-status .custom-status-header {
    margin-bottom: 4px;
  }

  .discord-status .custom-status-label {
    font-size: 10px;
    font-weight: 600;
    text-transform: uppercase;
    opacity: 0.6;
    letter-spacing: 0.3px;
  }

  .discord-status .custom-status-content {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 6px;
  }

  .discord-status .custom-status-text {
    font-size: 12px;
    font-weight: 500;
    opacity: 0.8;
    color: #f0f0f0;
  }

  .discord-status .spotify {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 12px;
    padding: 12px;
    margin-top: 8px;
  }

  .discord-status .spotify-header {
    margin-bottom: 8px;
  }

  .discord-status .spotify-label {
    font-size: 11px;
    font-weight: 600;
    text-transform: uppercase;
    opacity: 0.7;
    letter-spacing: 0.5px;
  }

  .discord-status .spotify-info {
    display: flex;
    align-items: center;
    gap: 12px;
  }

  .discord-status .spotify-album {
    width: 40px;
    height: 40px;
    border-radius: 8px;
  }

  .discord-status .spotify-text {
    flex: 1;
    min-width: 0;
  }

  .discord-status .spotify-song {
    margin: 0 0 4px 0;
    font-size: 14px;
    font-weight: 500;
    line-height: 1.2;
  }

  .discord-status .spotify-artist {
    margin: 0;
    font-size: 12px;
    opacity: 0.7;
    line-height: 1.2;
  }

  .discord-status .error {
    background: rgba(242, 63, 66, 0.1);
    border: 1px solid rgba(242, 63, 66, 0.3);
    border-radius: 8px;
    color: #f23f42;
    text-align: center;
    padding: 20px 0;
  }

  /* Animation pour un effet plus dynamique */
  .discord-status {
    will-change: opacity, transform;
  }

  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Hover effect */
  .discord-status:hover {
    transform: translateY(-2px);
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.6);
    transition: all 0.3s ease;
  }
</style>